<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>pl.pamsoft.imapcloud</groupId>
	<artifactId>parent</artifactId>
	<version>0.1.2-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>IMAP Cloud parent</name>

	<parent>
		<groupId>pl.pamsoft.qa</groupId>
		<artifactId>parent</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<prerequisites>
		<maven>3.6.0</maven>
	</prerequisites>

	<repositories>
		<repository>
			<id>github</id>
			<url>https://raw.github.com/pmajkutewicz/qa/repository/</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>archiva.internal</id>
			<name>Internal Release Repository</name>
			<url>http://archiva:8080/repository/internal/</url>
		</repository>
		<snapshotRepository>
			<id>archiva.snapshots</id>
			<name>Internal Snapshot Repository</name>
			<url>http://archiva:8080/repository/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<scm>
		<developerConnection>scm:git:git@pamsoft.pl:ACE/ImapCloud.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<jacoco.itReportPath>${project.basedir}/../integration-tests/target/jacoco-it.exec</jacoco.itReportPath>
		<sonar.jacoco.reportPaths>${jacoco.itReportPath},${project.build.directory}/jacoco-it.exec,${project.build.directory}/jacoco.exec</sonar.jacoco.reportPaths>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>

		<skip.findbugs>false</skip.findbugs>
		<skip.checkstyle>false</skip.checkstyle>
		<main.basedir>${project.basedir}</main.basedir>

		<!-- region backend client-->
		<okhttp.version>3.13.1</okhttp.version>
		<!-- endregion -->

		<!-- region common -->
		<bouncycastle.version>1.61</bouncycastle.version>
		<guava.version>27.0.1-jre</guava.version>
		<jackson.version>2.9.8</jackson.version>
		<jackson-datatype-jdk8.version>2.9.8</jackson-datatype-jdk8.version>
		<logback-classic.version>1.2.3</logback-classic.version>
		<!-- endregion -->

		<!-- region core -->
		<jetty.version>9.4.0.M1</jetty.version>
		<tomcat.version>8.0.30</tomcat.version>

		<commons-pool2.version>2.6.1</commons-pool2.version>
		<spring-boot.version>2.0.1.RELEASE</spring-boot.version>
		<snakeyaml.version>1.23</snakeyaml.version>
		<javax.mail-api.version>1.6.1</javax.mail-api.version>
		<joda-time.version>2.10.1</joda-time.version>
		<zero-allocation-hashing.version>0.8</zero-allocation-hashing.version>
		<springfox-swagger2.version>2.9.2</springfox-swagger2.version>
		<jamon.version>2.81</jamon.version>
		<ff4j-core.version>1.7.3</ff4j-core.version>
		<commons-vfs2.version>2.3</commons-vfs2.version>
		<httpclient.version>4.5.7</httpclient.version>
		<mysql-connector-java.version>8.0.15</mysql-connector-java.version>
		<HikariCP.version>3.3.1</HikariCP.version>
		<!-- endregion -->

		<!-- region storage-imap -->
		<commons-lang.version>2.6</commons-lang.version>
		<!-- check what spring boot version uses and update -->
		<spring-context.version>5.0.5.RELEASE</spring-context.version>
		<!-- endregion -->

		<!-- region gui -->
		<guice.version>4.2.2</guice.version>
		<ignite-guice.version>1.0.2</ignite-guice.version>
		<controlsfx.version>9.0.0</controlsfx.version>
		<commons-math3.version>3.6.1</commons-math3.version>
		<commons-io.version>2.6</commons-io.version>
		<!-- endregion -->

		<!-- region jmh -->
		<jmh-core.version>1.21</jmh-core.version>
		<!-- endregion -->

		<!-- region maven plugins -->
		<maven-assembly-plugin.version>${commons-lang.version}</maven-assembly-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-shade-plugin.version>3.0.0</maven-shade-plugin.version>
		<maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
		<maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
		<git-commit-id-plugin.version>2.2.2</git-commit-id-plugin.version>
		<sonar-maven-plugin.version>3.3.0.603</sonar-maven-plugin.version>
		<!-- endregion -->

		<!-- region QA -->
		<jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>
		<internal-junit.version>5.4.0</internal-junit.version>
		<org.junit.jupiter-junit-jupiter-api.version>${internal-junit.version}</org.junit.jupiter-junit-jupiter-api.version>
		<org.junit.jupiter-junit-jupiter-engine.version>${internal-junit.version}</org.junit.jupiter-junit-jupiter-engine.version>
		<org.junit.jupiter-junit-jupiter-params.version>${internal-junit.version}</org.junit.jupiter-junit-jupiter-params.version>
		<mockito-core.version>2.24.5</mockito-core.version>
		<!-- endregion -->

		<awaitility.version>3.1.6</awaitility.version>
		<h2.version>1.4.197</h2.version>
	</properties>

	<modules>
		<module>core</module>
		<module>communication-dto</module>
		<module>gui</module>
		<module>backend-client</module>
		<module>distribution</module>
		<module>jmh</module>
		<module>api</module>
		<module>storage-imap</module>
		<module>storage-vfs</module>
		<module>storage-testing</module>
		<module>integration-tests</module>
		<module>coverage-all</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>api</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>communication-dto</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>storage-imap</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>storage-testing</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>storage-vfs</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>backend-client</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>core</artifactId>
				<version>${project.version}</version>
				<classifier>exec</classifier>
			</dependency>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>gui</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- region backend client deps -->
			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>okhttp</artifactId>
				<version>${okhttp.version}</version>
			</dependency>
			<!-- endregion -->

			<!-- region core -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-configuration-processor</artifactId>
				<version>${spring-boot.version}</version>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>${snakeyaml.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>

			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcpg-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>

			<dependency>
				<groupId>net.openhft</groupId>
				<artifactId>zero-allocation-hashing</artifactId>
				<version>${zero-allocation-hashing.version}</version>
			</dependency>

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-java.version}</version>
			</dependency>
			<dependency>
				<groupId>com.zaxxer</groupId>
				<artifactId>HikariCP</artifactId>
				<version>${HikariCP.version}</version>
			</dependency>

			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${springfox-swagger2.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${springfox-swagger2.version}</version>
			</dependency>

			<dependency>
				<groupId>com.jamonapi</groupId>
				<artifactId>jamon</artifactId>
				<version>${jamon.version}</version>
			</dependency>

			<dependency>
				<groupId>org.ff4j</groupId>
				<artifactId>ff4j-core</artifactId>
				<version>${ff4j-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ff4j</groupId>
				<artifactId>ff4j-spring-boot-autoconfigure</artifactId>
				<version>${ff4j-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ff4j</groupId>
				<artifactId>ff4j-spring-boot-web-api</artifactId>
				<version>${ff4j-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.ff4j</groupId>
				<artifactId>ff4j-web</artifactId>
				<version>${ff4j-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<!-- endregion -->

			<!-- region GUI -->
			<dependency>
				<groupId>com.gluonhq</groupId>
				<artifactId>ignite-guice</artifactId>
				<version>${ignite-guice.version}</version>
			</dependency>

			<dependency>
				<groupId>org.controlsfx</groupId>
				<artifactId>controlsfx</artifactId>
				<version>${controlsfx.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math3</artifactId>
				<version>${commons-math3.version}</version>
			</dependency>
			<!-- endregion -->

			<!-- region common -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback-classic.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jdk8</artifactId>
				<version>${jackson-datatype-jdk8.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<!-- endregion -->

			<!-- region storage-testing -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring-context.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>javax.mail-api</artifactId>
				<version>${javax.mail-api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.mail</groupId>
				<artifactId>javax.mail</artifactId>
				<version>${javax.mail-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>${commons-pool2.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.25</version>
			</dependency>
			<!-- endregion -->

			<!-- region jmh -->
			<dependency>
				<groupId>org.openjdk.jmh</groupId>
				<artifactId>jmh-core</artifactId>
				<version>${jmh-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openjdk.jmh</groupId>
				<artifactId>jmh-generator-annprocess</artifactId>
				<version>${jmh-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcpkix-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-ext-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>
			<!-- endregion -->

			<!-- region test -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${org.junit.jupiter-junit-jupiter-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${org.junit.jupiter-junit-jupiter-engine.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-params</artifactId>
				<version>${org.junit.jupiter-junit-jupiter-params.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-vfs2</artifactId>
				<version>${commons-vfs2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.awaitility</groupId>
				<artifactId>awaitility</artifactId>
				<version>${awaitility.version}</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- endregion -->
		</dependencies>
	</dependencyManagement>

	<reporting>
		<outputDirectory>target/reports</outputDirectory>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>

	<dependencies>
		<dependency>
			<groupId>net.jcip</groupId>
			<artifactId>jcip-annotations</artifactId>
			<version>1.0</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs-annotations</artifactId>
			<version>3.1.11</version>
			<optional>true</optional>
		</dependency>

		<!-- tests -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito-core.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>.nondex</directory>
						</fileset>
						<fileset>
							<directory>.</directory>
							<includes>
								<inclide>imapcloud.log</inclide>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
			<!--<plugin>-->
				<!--<groupId>edu.illinois</groupId>-->
				<!--<artifactId>nondex-maven-plugin</artifactId>-->
				<!--<version>1.1.1</version>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<goals>-->
							<!--<goal>nondex</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-org.apache.maven.plugins-maven-surefire-plugin.version}</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<printSummary>true</printSummary>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<useFile>false</useFile>
					<reportFormat>xml</reportFormat>
					<runOrder>random</runOrder>
				</configuration>
				<executions>
					<execution>
						<id>default-test</id>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</execution>
					<execution>
						<id>unit-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<includes>
								<include>%regex[.*Test.*]</include>
							</includes>
							<excludes>
								<exclude>**/integration**/</exclude>
								<exclude>**/*IT</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.0.0-M3</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-testng</artifactId>
						<version>${maven-org.apache.maven.plugins-maven-surefire-plugin.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<argLine>${failsafeArgLine}</argLine>
					<printSummary>true</printSummary>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<useFile>false</useFile>
					<reuseForks>false</reuseForks>
					<forkCount>1</forkCount>
					<reportFormat>xml</reportFormat>
				</configuration>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<!-- 0.7.3, 0.7.4 and 0.7.5 don't works with sonar -->
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<!--
						Prepares the property pointing to the JaCoCo runtime agent which
						is passed as VM argument when Maven the Surefire plugin is executed.
					-->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!--
								Sets the name of the property containing the settings
								for JaCoCo runtime agent.
							-->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!--
						Ensures that the code coverage report for unit tests is created after
						unit tests have been run.
					-->
					<execution>
						<id>post-unit-test</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>

					<!--
						Prepares the property pointing to the JaCoCo runtime agent which
						is passed as VM argument when Maven the Failsafe plugin is executed.
					-->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<dumpOnExit>true</dumpOnExit>
							<!--
								Sets the name of the property containing the settings
								for JaCoCo runtime agent.
							-->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!--
						Ensures that the code coverage report for integration tests after
						integration tests have been run.
					-->
					<execution>
						<id>post-integration-test</id>
						<!-- must be after tomcat shutdown -->
						<phase>verify</phase>
						<goals>
							<goal>report-aggregate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>${git-commit-id-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
