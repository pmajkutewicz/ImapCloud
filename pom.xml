<project>
	<modelVersion>4.0.0</modelVersion>
	<groupId>pl.pamsoft.imapcloud</groupId>
	<artifactId>parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>IMAP Cloud parent</name>

	<prerequisites>
		<maven>3.0.3</maven>
	</prerequisites>

	<scm>
		<developerConnection>scm:git:git@pamsoft.pl:ACE/ImapCloud.git</developerConnection>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<jetty.version>9.3.9.M1</jetty.version>
		<spring-boot.version>1.3.5.RELEASE</spring-boot.version>
		<tomcat.version>8.0.30</tomcat.version>
		<guice.version>4.0</guice.version>
		<guava.version>19.0</guava.version>
		<gson.version>2.6.2</gson.version>
		<okhttp.version>3.2.0</okhttp.version>
		<ignite-guice.version>1.0.0</ignite-guice.version>
		<logback-classic.version>1.1.6</logback-classic.version>
		<javax.mail-api.version>1.5.5</javax.mail-api.version>
		<commons-io.version>2.5</commons-io.version>
		<snakeyaml.version>1.17</snakeyaml.version>
		<orientdb.version>2.1.15</orientdb.version>
		<lombok.version>1.16.8</lombok.version>
		<joda-time.version>2.9.3</joda-time.version>
		<jackson-datatype-jdk8.version>2.6.3</jackson-datatype-jdk8.version>
		<jackson.version>2.7.2</jackson.version>
		<controlsfx.version>8.40.10</controlsfx.version>

		<skip.findbugs>false</skip.findbugs>
		<skip.checkstyle>false</skip.checkstyle>
		<maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
		<checkstyle.version>6.15</checkstyle.version>
		<!-- findbugs -->
		<maven-findbugs-plugin.version>3.0.3</maven-findbugs-plugin.version>
		<findbugs-maven-plugin.failOnError>true</findbugs-maven-plugin.failOnError>
		<findsecbugs-plugin.version>1.4.5</findsecbugs-plugin.version>
		<fb-contrib.version>6.6.0</fb-contrib.version>
		<findbugs-annotation.version>3.0.1u2</findbugs-annotation.version>
		<!-- 0.7.3, 0.7.4 and 0.7.5 don't works with sonar -->
		<jacoco-maven-plugin.version>0.7.2.201409121644</jacoco-maven-plugin.version>
		<maven-surefire-plugin.version>2.17</maven-surefire-plugin.version>

		<main.basedir>${project.basedir}</main.basedir>
		<commons-pool2.version>2.4.2</commons-pool2.version>
		<bouncycastle.version>1.54</bouncycastle.version>
		<testng.version>6.9.10</testng.version>
	</properties>

	<modules>
		<module>core</module>
		<module>communication-dto</module>
		<module>gui</module>
		<module>backend-client</module>
		<module>distribution</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>communication-dto</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>backend-client</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>pl.pamsoft.imapcloud</groupId>
				<artifactId>gui</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- backend client deps -->
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>javax-websocket-client-impl</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>okhttp</artifactId>
				<version>${okhttp.version}</version>
			</dependency>

			<!-- core -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-websocket</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-configuration-processor</artifactId>
				<version>${spring-boot.version}</version>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-websocket</artifactId>
				<version>${tomcat.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>javax.mail-api</artifactId>
				<version>${javax.mail-api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.mail</groupId>
				<artifactId>javax.mail</artifactId>
				<version>${javax.mail-api.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>


			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>${snakeyaml.version}</version>
			</dependency>
			<dependency>
				<groupId>com.orientechnologies</groupId>
				<artifactId>orientdb-core</artifactId>
				<version>${orientdb.version}</version>
			</dependency>
			<dependency>
				<groupId>com.orientechnologies</groupId>
				<artifactId>orientdb-server</artifactId>
				<version>${orientdb.version}</version>
			</dependency>
			<dependency>
				<groupId>com.orientechnologies</groupId>
				<artifactId>orientdb-graphdb</artifactId>
				<version>${orientdb.version}</version>
			</dependency>
			<dependency>
				<groupId>com.orientechnologies</groupId>
				<artifactId>orientdb-object</artifactId>
				<version>${orientdb.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>${commons-pool2.version}</version>
			</dependency>

			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcpg-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>

			<!-- GUI -->
			<dependency>
				<groupId>com.gluonhq</groupId>
				<artifactId>ignite-guice</artifactId>
				<version>${ignite-guice.version}</version>
			</dependency>

			<dependency>
				<groupId>org.controlsfx</groupId>
				<artifactId>controlsfx</artifactId>
				<version>${controlsfx.version}</version>
			</dependency>

			<!-- common -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>${guice.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${gson.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback-classic.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jdk8</artifactId>
				<version>${jackson-datatype-jdk8.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>


			<!-- test -->
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${testng.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<reporting>
		<outputDirectory>target/reports</outputDirectory>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>

	<dependencies>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>annotations</artifactId>
			<version>${findbugs-annotation.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${skip.checkstyle}</skip>
					<sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
					<configLocation>other/checkstyle_checks.xml</configLocation>
					<failsOnError>true</failsOnError>
					<logViolationsToConsole>true</logViolationsToConsole>
					<consoleOutput>true</consoleOutput>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${checkstyle.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${maven-findbugs-plugin.version}</version>
				<executions>
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${skip.findbugs}</skip>
					<excludeFilterFile>${main.basedir}/other/findbug_excludes.xml</excludeFilterFile>
					<effort>Max</effort><!-- Min, Default, Max -->
					<!-- I guess this on can be set to Low after fixing higher priority bugs,
					 but let start from Highest ones -->
					<threshold>Default</threshold><!-- High, Default, Low, Ignore -->
					<failOnError>${findbugs-maven-plugin.failOnError}</failOnError>
					<plugins>
						<plugin>
							<groupId>com.h3xstream.findsecbugs</groupId>
							<artifactId>findsecbugs-plugin</artifactId>
							<version>${findsecbugs-plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>com.mebigfatguy.fb-contrib</groupId>
							<artifactId>fb-contrib</artifactId>
							<version>${fb-contrib.version}</version>
						</plugin>
					</plugins>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<printSummary>true</printSummary>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<useFile>false</useFile>
					<reportFormat>xml</reportFormat>
				</configuration>
				<executions>
					<execution>
						<id>default-test</id>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</execution>
					<execution>
						<id>unit-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<includes>
								<include>%regex[.*Test.*]</include>
							</includes>
							<excludes>
								<exclude>**/integration**/</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<!-- 0.7.3, 0.7.4 and 0.7.5 don't works with sonar -->
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<!--
						Prepares the property pointing to the JaCoCo runtime agent which
						is passed as VM argument when Maven the Surefire plugin is executed.
					-->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/jacoco-ut.exec</destFile>
							<!--
								Sets the name of the property containing the settings
								for JaCoCo runtime agent.
							-->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!--
						Ensures that the code coverage report for unit tests is created after
						unit tests have been run.
					-->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>

					<!--
						Prepares the property pointing to the JaCoCo runtime agent which
						is passed as VM argument when Maven the Failsafe plugin is executed.
					-->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<dumpOnExit>true</dumpOnExit>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/jacoco-it.exec</destFile>
							<!--
								Sets the name of the property containing the settings
								for JaCoCo runtime agent.
							-->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!--
						Ensures that the code coverage report for integration tests after
						integration tests have been run.
					-->
					<execution>
						<id>post-integration-test</id>
						<!-- must be after tomcat shutdown -->
						<phase>verify</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
